/toriwatch
│
├── /backend                      # FastAPI Backend
│   ├── /app                      # Main FastAPI app
│   │   ├── /api                  # API routes
│   │   │   ├── /auth             # Authentication endpoints
│   │   │   │   ├── endpoints.py
│   │   │   │   ├── schemas.py
│   │   │   ├── /tweets           # Tweets-related endpoints
│   │   │   │   ├── endpoints.py
│   │   │   │   ├── schemas.py
│   │   │   ├── /predictions      # Prediction endpoints
│   │   │   │   ├── endpoints.py
│   │   │   │   ├── schemas.py
│   │   ├── /core                 # Core utilities and config
│   │   │   ├── config.py         # App settings (uses .env from outermost level)
│   │   │   ├── security.py       # Authentication/authorization
│   │   │   ├── events.py         # Event handlers (startup, shutdown)
│   │   ├── /models               # Database models
│   │   │   ├── user.py           # User model
│   │   │   ├── tweet.py          # Tweet model
│   │   ├── /services             # Business logic layer
│   │   │   ├── auth.py           # Authentication services
│   │   │   ├── twitter.py        # Twitter API services
│   │   │   ├── tweet_analysis.py # Tweet analysis services
│   │   │   ├── prediction.py     # Prediction services
│   │   ├── /ml_pipeline          # End-to-end ML pipeline
│   │   │   ├── /data_ingestion   # Data ingestion scripts
│   │   │   │   ├── twitter_ingestion.py
│   │   │   ├── /data_preprocessing # Data preprocessing scripts
│   │   │   │   ├── preprocessor.py
│   │   │   ├── /model_training   # Model training scripts
│   │   │   │   ├── train.py
│   │   │   ├── /model_evaluation # Model evaluation scripts
│   │   │   │   ├── evaluate.py
│   │   │   ├── /model_deployment # Model deployment scripts
│   │   │   │   ├── deploy.py
│   │   │   ├── /monitoring       # Model monitoring scripts
│   │   │   │   ├── monitor.py
│   │   │   ├── pipeline.py       # End-to-end pipeline orchestration
│   │   ├── /events               # Event-driven handlers
│   │   │   ├── tweet_events.py   # Tweet-related event handlers
│   │   │   ├── user_events.py    # User-related event handlers
│   │   ├── /dependencies         # Dependency injection
│   │   │   ├── auth.py           # Auth dependencies
│   │   │   ├── twitter.py        # Twitter client dependencies
│   │   ├── /tests                # Unit & Integration tests
│   │   ├── main.py               # FastAPI entry point
│   │
│   ├── /data                     # Data storage
│   │   ├── /datasets             # Raw datasets
│   │   ├── /models               # Saved ML models
│   │
│   ├── /scripts                  # Utility scripts (migration, setup)
│   │   ├── train.py              # Script to train models
│   │   ├── evaluate.py           # Script to evaluate models
│   │
│   ├── /venv                     # Python virtual environment
│   ├── requirements.txt           # Dependencies
│   ├── dev-requirements.txt       # Dev dependencies
│   ├── Dockerfile                 # Docker config
│   ├── .env.example               # Example environment variables template
│
├── /frontend                      # Next.js Frontend (MVVM Architecture)
│   ├── /components                # UI Components (View)
│   │   ├── Button.tsx
│   │   ├── Card.tsx
│   ├── /views                     # Views (View)
│   │   ├── Home.tsx
│   │   ├── Predict.tsx
│   ├── /viewmodels                # ViewModels (ViewModel)
│   │   ├── HomeViewModel.ts
│   │   ├── PredictViewModel.ts
│   ├── /models                    # Models (Model)
│   │   ├── User.ts
│   │   ├── Tweet.ts
│   ├── /store                     # State management (e.g., Zustand/Recoil)
│   ├── /pages                     # Next.js Pages (View)
│   │   ├── index.tsx               # Home page
│   │   ├── predict.tsx             # Prediction page
│   ├── /public                     # Static assets
│   ├── /styles                     # Global styles
│   ├── next.config.js              # Next.js config
│   ├── tsconfig.json               # TypeScript config
│
├── /extensions                    # Browser extension code
│   ├── /background                 # Background scripts
│   ├── /content                    # Content scripts
│   ├── manifest.json                # Extension manifest
│
├── docker-compose.yml              # Docker Compose config
├── .env                            # Environment variables (outermost level)
├── README.md                       # Project documentation