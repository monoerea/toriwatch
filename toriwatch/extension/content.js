(()=>{"use strict";function e(o,t){if(o.matches(t))return o;for(const n of o.children){const o=e(n,t);if(o)return o}return null}const o=[],t=new Set;function n(e,t){if(0===o.length)return void console.log("Queue is empty. Nothing to process.");const r=o.splice(0,e);console.log("Processing batch:",r),t(r).then((r=>{console.log("Server response:",r),o.length>0&&n(e,t)})).catch((e=>{console.error("Error sending batch to server:",e),o.unshift(...r),console.log("Re-added batch to queue:",r)}))}function r(r){const c=e(r,"a");if(!c)return void console.log("No <a> element found in the article.");const i=e(r,'[data-testid="User-Name"]'),a=i?i.getAttribute("id"):null;if(!a)return void console.log("No element with data-testid='User-Name' found in the article.");var l;l={screen_name:c.getAttribute("href").slice(1),targetID:a},t.has(l.screen_name)?console.log("Duplicate screen_name found. Not adding to queue:",l.screen_name):(o.push(l),t.add(l.screen_name),console.log("Added to queue:",l)),n(10,s)}async function s(e){return new Promise(((o,t)=>{setTimeout((()=>{Math.random()<.9?o({status:"success",data:e}):t(new Error("Server error"))}),1e3)}))}async function c(){console.log("Waiting for <main> element to load...");const e=await new Promise((e=>{new MutationObserver(((o,t)=>{const n=document.querySelector("main");n&&(t.disconnect(),e(n))})).observe(document.body,{childList:!0,subtree:!0})}));console.log("<main> element found. Initializing observer..."),function(e,o){new MutationObserver((e=>{for(const t of e)"childList"===t.type&&t.addedNodes.forEach((e=>{e.nodeType===Node.ELEMENT_NODE&&("article"===e.tagName.toLowerCase()?o(e):e.querySelectorAll("article").forEach((e=>o(e))))}))})).observe(e,{childList:!0,subtree:!0}),console.log("Observing <main> for new articles...")}(e,r)}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",c):c()})();